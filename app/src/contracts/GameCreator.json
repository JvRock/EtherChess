{
  "contractName": "GameCreator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestGame",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_whitePlayers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_blackPlayers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_blockFactor",
          "type": "uint256"
        }
      ],
      "name": "newGame",
      "outputs": [
        {
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGamesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGamesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestGame\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitePlayers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_blackPlayers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_blockFactor\",\"type\":\"uint256\"}],\"name\":\"newGame\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jaan Smith\",\"methods\":{\"getGamesSize()\":{\"author\":\"Jaan Smith\",\"details\":\"probably converted to a uint in a vinal build just to track new games, instead of tracking the existing array\",\"returns\":{\"size\":\"of the games array\"}},\"newGame(address[],address[],uint256)\":{\"author\":\"Jaan Smith\",\"details\":\"too expensive to do in live, needs to be optimised or looked at for a cheaper option. (Costs 200k+ gas!)\",\"params\":{\"_blackPlayers\":\"is an array of addresses representing the players for the black pieces\",\"_blockFactor\":\"represents the amount of blocks that can pass before timing a team out\",\"_whitePlayers\":\"is an array of addresses representing the players for the white pieces \"},\"returns\":{\"newContract\":\"- the address of the new ChessGame contract owned by the msg.sender\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"toggleActive()\":{\"author\":\"Jaan Smith\",\"details\":\"Used for circuit breaker function\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A contract that initialises new ChessGames, giving users their own chess game\"},\"userdoc\":{\"methods\":{\"getGamesSize()\":{\"notice\":\"Returns the current size of the games variable\"},\"newGame(address[],address[],uint256)\":{\"notice\":\"Creates a new game, initialising new contracts for the chess game, and a new board state\"},\"toggleActive()\":{\"notice\":\"Flips the active state of the contract, active/inactive\"}}}},\"settings\":{\"compilationTarget\":{\"/E/dev/Consensys Course/EtherChess/contracts/GameCreator.sol\":\"GameCreator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/dev/Consensys Course/EtherChess/contracts/BoardState.sol\":{\"keccak256\":\"0xd64823b7a57699d9ac727cf06eebf1b93505f0f58816ad301c04bee5cded813b\",\"urls\":[\"bzz-raw://c35f7d65b01ba6bcfa9a0c7f1bf4f3d4cd99b18da20303dbaa01e211be3fedee\",\"dweb:/ipfs/QmSyqUbPm2Q2uPnPvmyKJgrMZcKs27bC5v2LrTvGHTP5sK\"]},\"/E/dev/Consensys Course/EtherChess/contracts/ChessGame.sol\":{\"keccak256\":\"0xdc3dbcf828206d69f0c084637f9fbe2dfacdac72de4295923421e8ec5b57f598\",\"urls\":[\"bzz-raw://c52d35d0c9b5a44176aba082bcb8ffc2fc12f7ee0232b7c556dc007dd3c6126d\",\"dweb:/ipfs/Qmd1Tf7FXtRMR2bfriq3D2V69TMAjqQu7z4BLbc8au77Ph\"]},\"/E/dev/Consensys Course/EtherChess/contracts/GameCreator.sol\":{\"keccak256\":\"0x82bf64df9b184110a0d6165e91b9f81af5558f0cdd32892147fd0274c0db2973\",\"urls\":[\"bzz-raw://c0e93f674037eacf7a16f5843c0a251d94a0fa01e9b45c63a7570c68a865c65f\",\"dweb:/ipfs/QmagDRjSvchPkzpBU1366BGn1vDHr7LYt6LqvmxAfXLp1U\"]},\"/E/dev/Consensys Course/EtherChess/contracts/GameEngine.sol\":{\"keccak256\":\"0x3151d35c830870e2dc04f93a755582de10dc8a1356a514ab113c316f5449c8c0\",\"urls\":[\"bzz-raw://f7e1fe8114bd39a4f07fc6b9c2fe4b5e91ce9bfa3a3bf7b0ec38fe78c5c5623c\",\"dweb:/ipfs/Qmbg13zgt6gaMsqWoxUoHGoYQKNUyEjANEt88dbb5NdGeg\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]}},\"version\":1}",
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550600061002e6100d160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d9565b600033905090565b61333f806100e86000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c806375f12b21116200006f57806375f12b2114620002cd5780638da5cb5b14620002f1578063a28b7965146200033d578063b553910d146200035d578063f2fde38b14620003e457620000a0565b8063117a5b9014620000a557806329c68dc1146200011657806351583ac81462000122578063715018a614620002c1575b600080fd5b620000d460048036036020811015620000bd57600080fd5b81019080803590602001909291905050506200042b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200012062000468565b005b6200027f600480360360608110156200013a57600080fd5b81019080803590602001906401000000008111156200015857600080fd5b8201836020820111156200016b57600080fd5b803590602001918460208302840111640100000000831117156200018e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115620001ef57600080fd5b8201836020820111156200020257600080fd5b803590602001918460208302840111640100000000831117156200022557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062000560565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620002cb620007a2565b005b620002d76200092d565b604051808215151515815260200191505060405180910390f35b620002fb62000940565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200034762000969565b6040518082815260200191505060405180910390f35b620003a2600480360360208110156200037557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000976565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200042960048036036020811015620003fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009a9565b005b600181815481106200043957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200047262000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b60008060149054906101000a900460ff1615620005e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f436f6e74726163742069732073746f707065640000000000000000000000000081525060200191505060405180910390fd5b6000848484604051620005f89062000bc3565b808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156200064457808201518184015260208101905062000627565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015620006885780820151818401526020810190506200066b565b5050505090500195505050505050604051809103906000f080158015620006b3573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550809150509392505050565b620007ac62000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200086e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600180549050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620009b362000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000a75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620032e46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6127128062000bd28339019056fe60806040523480156200001157600080fd5b506040516200271238038062002712833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b5050505090500160405260200180516040519392919084640100000000821115620000f057600080fd5b838201915060208201858111156200010757600080fd5b82518660208202830111640100000000821117156200012557600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200015e57808201518184015260208101905062000141565b50505050905001604052602001805190602001909291905050506004835110620001f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d6178696d756d203420706c61796572732065616368207465616d000000000081525060200191505060405180910390fd5b600482511062000268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d6178696d756d203420706c61796572732065616368207465616d000000000081525060200191505060405180910390fd5b826002908051906020019062000280929190620005a5565b50816003908051906020019062000299929190620005a5565b50806005819055506000600660006101000a81548160ff0219169083151502179055506000600660016101000a81548160ff0219169083151502179055506000600660026101000a81548160ff02191690831515021790555043600781905550604051620003079062000634565b604051809103906000f08015801562000324573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620003739062000642565b604051809103906000f08015801562000390573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a819055506200047360028054806020026020016040519081016040528092919081815260200182805480156200046057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000415575b505050505060006200051760201b60201c565b6200050e6003805480602002602001604051908101604052809291908181526020018280548015620004fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620004b0575b505050505060016200051760201b60201c565b50505062000696565b60008090505b8251811015620005a05781600460008584815181106200053957fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200051d565b505050565b82805482825590600052602060002090810192821562000621579160200282015b82811115620006205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620005c6565b5b50905062000630919062000650565b5090565b61014f806200193e83390190565b610c858062001a8d83390190565b6200069391905b808211156200068f57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010162000657565b5090565b90565b61129880620006a66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638c44da1c116100715780638c44da1c146101ef578063a01e2f23146102aa578063a2522d0b146102c8578063ca78232d14610393578063dfbf53ae14610401578063fc54a23714610423576100a9565b80630e001b38146100ae5780630e04a7d8146100cc5780632420f7f0146100ee5780633de94925146101715780638b299903146101cd575b600080fd5b6100b6610491565b6040518082815260200191505060405180910390f35b6100d4610497565b604051808215151515815260200191505060405180910390f35b6100f66104aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013657808201518184015260208101905061011b565b50505050905090810190601f1680156101635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b36004803603602081101561018757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610611565b604051808215151515815260200191505060405180910390f35b6101d5610631565b604051808215151515815260200191505060405180910390f35b6102a86004803603602081101561020557600080fd5b810190808035906020019064010000000081111561022257600080fd5b82018360208201111561023457600080fd5b8035906020019184600183028401116401000000008311171561025657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610644565b005b6102b261096a565b6040518082815260200191505060405180910390f35b6102d0610970565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156103145780820151818401526020810190506102f9565b50505050905090810190601f1680156103415780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561037d578082015181840152602081019050610362565b5050505090500194505050505060405180910390f35b6103bf600480360360208110156103a957600080fd5b8101908080359060200190929190505050610b23565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610409610b5f565b604051808215151515815260200191505060405180910390f35b61044f6004803603602081101561043957600080fd5b8101908080359060200190929190505050610b72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60075481565b600660019054906101000a900460ff1681565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfc2d656040518163ffffffff1660e01b815260040160006040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561055157600080fd5b810190808051604051939291908464010000000082111561057157600080fd5b8382019150602082018581111561058757600080fd5b82518660018202830111640100000000821117156105a457600080fd5b8083526020830192505050908051906020019080838360005b838110156105d85780820151818401526020810190506105bd565b50505050905090810190601f1680156106055780820380516001836020036101000a031916815260200191505b50604052505050905090565b60046020528060005260406000206000915054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60001515600660019054906101000a900460ff161515146106b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061123d6026913960400191505060405180910390fd5b600660009054906101000a900460ff161515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610784576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f7420796f7572207475726e2c20736f72727900000000000000000000000081525060200191505060405180910390fd5b43600554600754011115801561079c57506000600854145b156107d4576107a9610bae565b600660009054906101000a900460ff1615600660026101000a81548160ff0219169083151502179055505b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316e23104836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561086657808201518184015260208101905061084b565b50505050905090810190601f1680156108935780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b505050506040513d60208110156108dc57600080fd5b81019080805190602001909291905050501515146108f957600080fd5b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061094c929190611197565b50600a60008154809291906001019190505550610967610bcb565b50565b60055481565b60608060001515600660009054906101000a900460ff1615151415610a595760026040518060400160405280600581526020017f57686974650000000000000000000000000000000000000000000000000000008152509080805480602002602001604051908101604052809291908181526020018280548015610a4957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109ff575b5050505050905091509150610b1f565b60036040518060400160405280600581526020017f426c61636b0000000000000000000000000000000000000000000000000000008152509080805480602002602001604051908101604052809291908181526020018280548015610b1357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ac9575b50505050509050915091505b9091565b60028181548110610b3057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660029054906101000a900460ff1681565b60038181548110610b7f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600660016101000a81548160ff021916908315150217905550565b6000600660009054906101000a900460ff1615610bef576003805490509050610bf8565b60028054905090505b80600a5410610c0a57610c09610c0d565b5b50565b6000606060001515600660009054906101000a900460ff1615151415610cbb576002805480602002602001604051908101604052809291908181526020018280548015610caf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c65575b50505050509050610d45565b6003805480602002602001604051908101604052809291908181526020018280548015610d3d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cf3575b505050505090505b60606001600a5401604051908082528060200260200182016040528015610d8057816020015b6060815260200190600190039081610d6b5790505b509050600080905060008490505b600a54811015610f255760096000858381518110610da857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7e5780601f10610e5357610100808354040283529160200191610e7e565b820191906000526020600020905b815481529060010190602001808311610e6157829003601f168201915b5050505050838381518110610e8f57fe5b60200260200101819052506040518060200160405280600081525060096000868481518110610eba57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f0f929190611197565b5081806001019250508080600101915050610d8e565b5060006001600a541415610f3c5760009050610f78565b600a546001430340604051602001808281526020019150506040516020818303038152906040528051906020012060001c81610f7457fe5b0690505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636aa68e4b848381518110610fc157fe5b60200260200101516040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611018578082015181840152602081019050610ffd565b50505050905090810190601f1680156110455780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561106457600080fd5b505af1158015611078573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110a257600080fd5b81019080805160405193929190846401000000008211156110c257600080fd5b838201915060208201858111156110d857600080fd5b82518660018202830111640100000000821117156110f557600080fd5b8083526020830192505050908051906020019080838360005b8381101561112957808201518184015260208101905061110e565b50505050905090810190601f1680156111565780820380516001836020036101000a031916815260200191505b50604052505050506000600a81905550600660009054906101000a900460ff1615600660006101000a81548160ff0219169083151502179055505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111d857805160ff1916838001178555611206565b82800160010185558215611206579182015b828111156112055782518255916020019190600101906111ea565b5b5090506112139190611217565b5090565b61123991905b8082111561123557600081600090555060010161121d565b5090565b9056fe47616d65206973206f7665722c206e6f206d6f726520766f74696e6720666f72207475726e73a2646970667358221220a5e481dd87b1db263cf6e3aa35cc6f65267631ebeda65a5515dcaa3ea1b6f86664736f6c63430006010033608060405234801561001057600080fd5b5061012f806100206000396000f3fe608060405260043610601c5760003560e01c806316e23104146021575b600080fd5b60d460048036036020811015603557600080fd5b8101908080359060200190640100000000811115605157600080fd5b820183602082011115606257600080fd5b80359060200191846001830284011164010000000083111715608357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505060ee565b604051808215151515815260200191505060405180910390f35b60006001905091905056fea2646970667358221220ba584a610edfb96e90f568da9c9ffb7ddd191f154bdb55332c9773c5ac901faa64736f6c63430006010033608060405234801561001057600080fd5b5060006100216100f360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350604051806060016040528060388152602001610c4d60389139600290805190602001906100ed9291906100fb565b506101a0565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013c57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016957825182559160200191906001019061014e565b5b509050610177919061017b565b5090565b61019d91905b80821115610199576000816000905550600101610181565b5090565b90565b610a9e806101af6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636aa68e4b14610067578063715018a61461019b5780638da5cb5b146101a5578063a7a38f0b146101ef578063f2fde38b14610296578063fbfc2d65146102da575b600080fd5b6101206004803603602081101561007d57600080fd5b810190808035906020019064010000000081111561009a57600080fd5b8201836020820111156100ac57600080fd5b803590602001918460018302840111640100000000831117156100ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061035d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610160578082015181840152602081019050610145565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a3610480565b005b6101ad610608565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021b6004803603602081101561020557600080fd5b8101908080359060200190929190505050610631565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d8600480360360208110156102ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ea565b005b6102e26108f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060610367610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610428576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018290806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061046392919061099d565b50816002908051906020019061047a92919061099d565b50919050565b610488610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610549576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061063e57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b505050505081565b6106f2610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610a436026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b505050505081565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109de57805160ff1916838001178555610a0c565b82800160010185558215610a0c579182015b82811115610a0b5782518255916020019190600101906109f0565b5b509050610a199190610a1d565b5090565b610a3f91905b80821115610a3b576000816000905550600101610a23565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122014797e6dcacfe31ce7464b453f7ab843190e63d2c847337b602d985b45b5f06964736f6c63430006010033726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d203020314f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212209aece63a604a73569ef21ee42eb15d12a14aa637341a02cbd13cee4dc658578e64736f6c63430006010033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c806375f12b21116200006f57806375f12b2114620002cd5780638da5cb5b14620002f1578063a28b7965146200033d578063b553910d146200035d578063f2fde38b14620003e457620000a0565b8063117a5b9014620000a557806329c68dc1146200011657806351583ac81462000122578063715018a614620002c1575b600080fd5b620000d460048036036020811015620000bd57600080fd5b81019080803590602001909291905050506200042b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200012062000468565b005b6200027f600480360360608110156200013a57600080fd5b81019080803590602001906401000000008111156200015857600080fd5b8201836020820111156200016b57600080fd5b803590602001918460208302840111640100000000831117156200018e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115620001ef57600080fd5b8201836020820111156200020257600080fd5b803590602001918460208302840111640100000000831117156200022557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062000560565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620002cb620007a2565b005b620002d76200092d565b604051808215151515815260200191505060405180910390f35b620002fb62000940565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200034762000969565b6040518082815260200191505060405180910390f35b620003a2600480360360208110156200037557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000976565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200042960048036036020811015620003fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620009a9565b005b600181815481106200043957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200047262000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b60008060149054906101000a900460ff1615620005e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f436f6e74726163742069732073746f707065640000000000000000000000000081525060200191505060405180910390fd5b6000848484604051620005f89062000bc3565b808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156200064457808201518184015260208101905062000627565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015620006885780820151818401526020810190506200066b565b5050505090500195505050505050604051809103906000f080158015620006b3573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550809150509392505050565b620007ac62000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200086e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600180549050905090565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620009b362000bbb565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000a75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620032e46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6127128062000bd28339019056fe60806040523480156200001157600080fd5b506040516200271238038062002712833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b5050505090500160405260200180516040519392919084640100000000821115620000f057600080fd5b838201915060208201858111156200010757600080fd5b82518660208202830111640100000000821117156200012557600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200015e57808201518184015260208101905062000141565b50505050905001604052602001805190602001909291905050506004835110620001f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d6178696d756d203420706c61796572732065616368207465616d000000000081525060200191505060405180910390fd5b600482511062000268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d6178696d756d203420706c61796572732065616368207465616d000000000081525060200191505060405180910390fd5b826002908051906020019062000280929190620005a5565b50816003908051906020019062000299929190620005a5565b50806005819055506000600660006101000a81548160ff0219169083151502179055506000600660016101000a81548160ff0219169083151502179055506000600660026101000a81548160ff02191690831515021790555043600781905550604051620003079062000634565b604051809103906000f08015801562000324573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620003739062000642565b604051809103906000f08015801562000390573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a819055506200047360028054806020026020016040519081016040528092919081815260200182805480156200046057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000415575b505050505060006200051760201b60201c565b6200050e6003805480602002602001604051908101604052809291908181526020018280548015620004fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620004b0575b505050505060016200051760201b60201c565b50505062000696565b60008090505b8251811015620005a05781600460008584815181106200053957fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200051d565b505050565b82805482825590600052602060002090810192821562000621579160200282015b82811115620006205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620005c6565b5b50905062000630919062000650565b5090565b61014f806200193e83390190565b610c858062001a8d83390190565b6200069391905b808211156200068f57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010162000657565b5090565b90565b61129880620006a66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638c44da1c116100715780638c44da1c146101ef578063a01e2f23146102aa578063a2522d0b146102c8578063ca78232d14610393578063dfbf53ae14610401578063fc54a23714610423576100a9565b80630e001b38146100ae5780630e04a7d8146100cc5780632420f7f0146100ee5780633de94925146101715780638b299903146101cd575b600080fd5b6100b6610491565b6040518082815260200191505060405180910390f35b6100d4610497565b604051808215151515815260200191505060405180910390f35b6100f66104aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013657808201518184015260208101905061011b565b50505050905090810190601f1680156101635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b36004803603602081101561018757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610611565b604051808215151515815260200191505060405180910390f35b6101d5610631565b604051808215151515815260200191505060405180910390f35b6102a86004803603602081101561020557600080fd5b810190808035906020019064010000000081111561022257600080fd5b82018360208201111561023457600080fd5b8035906020019184600183028401116401000000008311171561025657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610644565b005b6102b261096a565b6040518082815260200191505060405180910390f35b6102d0610970565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156103145780820151818401526020810190506102f9565b50505050905090810190601f1680156103415780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561037d578082015181840152602081019050610362565b5050505090500194505050505060405180910390f35b6103bf600480360360208110156103a957600080fd5b8101908080359060200190929190505050610b23565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610409610b5f565b604051808215151515815260200191505060405180910390f35b61044f6004803603602081101561043957600080fd5b8101908080359060200190929190505050610b72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60075481565b600660019054906101000a900460ff1681565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfc2d656040518163ffffffff1660e01b815260040160006040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561055157600080fd5b810190808051604051939291908464010000000082111561057157600080fd5b8382019150602082018581111561058757600080fd5b82518660018202830111640100000000821117156105a457600080fd5b8083526020830192505050908051906020019080838360005b838110156105d85780820151818401526020810190506105bd565b50505050905090810190601f1680156106055780820380516001836020036101000a031916815260200191505b50604052505050905090565b60046020528060005260406000206000915054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60001515600660019054906101000a900460ff161515146106b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061123d6026913960400191505060405180910390fd5b600660009054906101000a900460ff161515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610784576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f7420796f7572207475726e2c20736f72727900000000000000000000000081525060200191505060405180910390fd5b43600554600754011115801561079c57506000600854145b156107d4576107a9610bae565b600660009054906101000a900460ff1615600660026101000a81548160ff0219169083151502179055505b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316e23104836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561086657808201518184015260208101905061084b565b50505050905090810190601f1680156108935780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b505050506040513d60208110156108dc57600080fd5b81019080805190602001909291905050501515146108f957600080fd5b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061094c929190611197565b50600a60008154809291906001019190505550610967610bcb565b50565b60055481565b60608060001515600660009054906101000a900460ff1615151415610a595760026040518060400160405280600581526020017f57686974650000000000000000000000000000000000000000000000000000008152509080805480602002602001604051908101604052809291908181526020018280548015610a4957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109ff575b5050505050905091509150610b1f565b60036040518060400160405280600581526020017f426c61636b0000000000000000000000000000000000000000000000000000008152509080805480602002602001604051908101604052809291908181526020018280548015610b1357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ac9575b50505050509050915091505b9091565b60028181548110610b3057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660029054906101000a900460ff1681565b60038181548110610b7f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600660016101000a81548160ff021916908315150217905550565b6000600660009054906101000a900460ff1615610bef576003805490509050610bf8565b60028054905090505b80600a5410610c0a57610c09610c0d565b5b50565b6000606060001515600660009054906101000a900460ff1615151415610cbb576002805480602002602001604051908101604052809291908181526020018280548015610caf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c65575b50505050509050610d45565b6003805480602002602001604051908101604052809291908181526020018280548015610d3d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cf3575b505050505090505b60606001600a5401604051908082528060200260200182016040528015610d8057816020015b6060815260200190600190039081610d6b5790505b509050600080905060008490505b600a54811015610f255760096000858381518110610da857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7e5780601f10610e5357610100808354040283529160200191610e7e565b820191906000526020600020905b815481529060010190602001808311610e6157829003601f168201915b5050505050838381518110610e8f57fe5b60200260200101819052506040518060200160405280600081525060096000868481518110610eba57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f0f929190611197565b5081806001019250508080600101915050610d8e565b5060006001600a541415610f3c5760009050610f78565b600a546001430340604051602001808281526020019150506040516020818303038152906040528051906020012060001c81610f7457fe5b0690505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636aa68e4b848381518110610fc157fe5b60200260200101516040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611018578082015181840152602081019050610ffd565b50505050905090810190601f1680156110455780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561106457600080fd5b505af1158015611078573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110a257600080fd5b81019080805160405193929190846401000000008211156110c257600080fd5b838201915060208201858111156110d857600080fd5b82518660018202830111640100000000821117156110f557600080fd5b8083526020830192505050908051906020019080838360005b8381101561112957808201518184015260208101905061110e565b50505050905090810190601f1680156111565780820380516001836020036101000a031916815260200191505b50604052505050506000600a81905550600660009054906101000a900460ff1615600660006101000a81548160ff0219169083151502179055505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111d857805160ff1916838001178555611206565b82800160010185558215611206579182015b828111156112055782518255916020019190600101906111ea565b5b5090506112139190611217565b5090565b61123991905b8082111561123557600081600090555060010161121d565b5090565b9056fe47616d65206973206f7665722c206e6f206d6f726520766f74696e6720666f72207475726e73a2646970667358221220a5e481dd87b1db263cf6e3aa35cc6f65267631ebeda65a5515dcaa3ea1b6f86664736f6c63430006010033608060405234801561001057600080fd5b5061012f806100206000396000f3fe608060405260043610601c5760003560e01c806316e23104146021575b600080fd5b60d460048036036020811015603557600080fd5b8101908080359060200190640100000000811115605157600080fd5b820183602082011115606257600080fd5b80359060200191846001830284011164010000000083111715608357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505060ee565b604051808215151515815260200191505060405180910390f35b60006001905091905056fea2646970667358221220ba584a610edfb96e90f568da9c9ffb7ddd191f154bdb55332c9773c5ac901faa64736f6c63430006010033608060405234801561001057600080fd5b5060006100216100f360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350604051806060016040528060388152602001610c4d60389139600290805190602001906100ed9291906100fb565b506101a0565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013c57805160ff191683800117855561016a565b8280016001018555821561016a579182015b8281111561016957825182559160200191906001019061014e565b5b509050610177919061017b565b5090565b61019d91905b80821115610199576000816000905550600101610181565b5090565b90565b610a9e806101af6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636aa68e4b14610067578063715018a61461019b5780638da5cb5b146101a5578063a7a38f0b146101ef578063f2fde38b14610296578063fbfc2d65146102da575b600080fd5b6101206004803603602081101561007d57600080fd5b810190808035906020019064010000000081111561009a57600080fd5b8201836020820111156100ac57600080fd5b803590602001918460018302840111640100000000831117156100ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061035d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610160578082015181840152602081019050610145565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a3610480565b005b6101ad610608565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021b6004803603602081101561020557600080fd5b8101908080359060200190929190505050610631565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d8600480360360208110156102ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ea565b005b6102e26108f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060610367610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610428576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018290806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061046392919061099d565b50816002908051906020019061047a92919061099d565b50919050565b610488610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610549576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061063e57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b505050505081565b6106f2610995565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610a436026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b505050505081565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109de57805160ff1916838001178555610a0c565b82800160010185558215610a0c579182015b82811115610a0b5782518255916020019190600101906109f0565b5b509050610a199190610a1d565b5090565b610a3f91905b80821115610a3b576000816000905550600101610a23565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122014797e6dcacfe31ce7464b453f7ab843190e63d2c847337b602d985b45b5f06964736f6c63430006010033726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d203020314f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212209aece63a604a73569ef21ee42eb15d12a14aa637341a02cbd13cee4dc658578e64736f6c63430006010033",
  "sourceMap": "177:2235:2:-:0;;;270:5;248:27;;;;;;;;;;;;;;;;;;;;882:17:6;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;177:2235:2;;598:104:5;651:15;685:10;678:17;;598:104;:::o;177:2235:2:-;;;;;;;",
  "deployedSourceMap": "177:2235:2:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:2235:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;585:22:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2329:78;;;:::i;:::-;;1430:381;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1430:381:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1430:381:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1430:381:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1430:381:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1430:381:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1430:381:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1430:381:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1430:381:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1430:381:2;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1706:145:6;;;:::i;:::-;;248:27:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1083:77:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2078:94:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;723:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;723:45:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2000:240:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2000:240:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;585:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2329:78::-;1297:12:6;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:7:2::1;;;;;;;;;;;2391:8;2381:7;;:18;;;;;;;;;;;;;;;;;;2329:78::o:0;1430:381::-;1561:19;318:7;;;;;;;;;;;317:8;309:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:19:::1;1629:13;1644;1659:12;1615:57;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1615:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1615:57:2;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1615:57:2;1593:79;;1683:5;1702:9;1683:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1683:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:9;1724:10;:22;1735:10;1724:22;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1793:9;1778:25;;;1430:381:::0;;;;;:::o;1706:145:6:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;248:27:2:-;;;;;;;;;;;;;:::o;1083:77:6:-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;2078:94:2:-;2123:9;2152:5;:12;;;;2145:19;;2078:94;:::o;723:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;2000:240:6:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;177:2235:2:-;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.8.0;\r\n\r\nimport './ChessGame.sol';\r\n/// @title A contract that initialises new ChessGames, giving users their own chess game\r\n/// @author Jaan Smith\r\ncontract GameCreator is Ownable {\r\n    //Circuit breaker variable\r\n    bool public stopped = false;\r\n    modifier stopInEmergency { require(!stopped, \"Contract is stopped\" ); _; }\r\n        \r\n    ///Would not be implemented in \"live\" as this would get too large if the app became popular\r\n    ///Could be replaced with a database, or with people recording their own game's addresses to plug into the app\r\n    address[] public games;\r\n    ///This exists only as a source to retrieve the latest game, incase a user forgets their latest address\r\n    mapping(address => address) public latestGame;\r\n\r\n    /// @author Jaan Smith\r\n    /// @notice Creates a new game, initialising new contracts for the chess game, and a new board state\r\n    /// @dev too expensive to do in live, needs to be optimised or looked at for a cheaper option. (Costs 200k+ gas!)\r\n    /// @param _whitePlayers is an array of addresses representing the players for the white pieces \r\n    /// @param _blackPlayers is an array of addresses representing the players for the black pieces\r\n    /// @param _blockFactor represents the amount of blocks that can pass before timing a team out\r\n    /// @return newContract - the address of the new ChessGame contract owned by the msg.sender\r\n    function newGame(address[] memory _whitePlayers, address[] memory _blackPlayers, uint _blockFactor) stopInEmergency public returns(address newContract) {\r\n        ChessGame chessGame = new ChessGame(_whitePlayers, _blackPlayers, _blockFactor);\r\n        games.push(address(chessGame));\r\n        latestGame[msg.sender] = address(chessGame);\r\n        return address(chessGame);\r\n    }\r\n\r\n\r\n    /// @author Jaan Smith\r\n    /// @notice Returns the current size of the games variable\r\n    /// @dev probably converted to a uint in a vinal build just to track new games, instead of tracking the existing array\r\n    /// @return size of the games array\r\n    function getGamesSize() public view returns (uint size) {\r\n        return games.length;\r\n    }\r\n\r\n    /// @author Jaan Smith\r\n    /// @notice Flips the active state of the contract, active/inactive\r\n    /// @dev Used for circuit breaker function\r\n    function toggleActive() onlyOwner public {\r\n        stopped = !stopped;\r\n    }\r\n\r\n}",
  "sourcePath": "E:/dev/Consensys Course/EtherChess/contracts/GameCreator.sol",
  "ast": {
    "absolutePath": "/E/dev/Consensys Course/EtherChess/contracts/GameCreator.sol",
    "exportedSymbols": {
      "GameCreator": [
        544
      ]
    },
    "id": 545,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 451,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/E/dev/Consensys Course/EtherChess/contracts/ChessGame.sol",
        "file": "./ChessGame.sol",
        "id": 452,
        "nodeType": "ImportDirective",
        "scope": 545,
        "sourceUnit": 450,
        "src": "36:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 453,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 716,
              "src": "201:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$716",
                "typeString": "contract Ownable"
              }
            },
            "id": 454,
            "nodeType": "InheritanceSpecifier",
            "src": "201:7:2"
          }
        ],
        "contractDependencies": [
          449,
          613,
          716
        ],
        "contractKind": "contract",
        "documentation": "@title A contract that initialises new ChessGames, giving users their own chess game\n @author Jaan Smith",
        "fullyImplemented": true,
        "id": 544,
        "linearizedBaseContracts": [
          544,
          716,
          613
        ],
        "name": "GameCreator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "75f12b21",
            "id": 457,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "248:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 455,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "248:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "270:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "307:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "317:8:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "318:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732073746f70706564",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "327:21:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c47b25138acd721a4e3edee77dde73d84e3fb161494ef995338743254e8ff252",
                          "typeString": "literal_string \"Contract is stopped\""
                        },
                        "value": "Contract is stopped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c47b25138acd721a4e3edee77dde73d84e3fb161494ef995338743254e8ff252",
                          "typeString": "literal_string \"Contract is stopped\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        734,
                        735
                      ],
                      "referencedDeclaration": 735,
                      "src": "309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "309:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "309:41:2"
                },
                {
                  "id": 465,
                  "nodeType": "PlaceholderStatement",
                  "src": "352:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 467,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:2"
            },
            "src": "282:74:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "117a5b90",
            "id": 470,
            "name": "games",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "585:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 468,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "585:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 469,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "585:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b553910d",
            "id": 474,
            "name": "latestGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "723:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 473,
              "keyType": {
                "id": 471,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "723:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 472,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "742:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "1582:229:2",
              "statements": [
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "name": "chessGame",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 522,
                      "src": "1593:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChessGame_$449",
                        "typeString": "contract ChessGame"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 489,
                        "name": "ChessGame",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 449,
                        "src": "1593:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 493,
                        "name": "_whitePlayers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "1629:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "_blackPlayers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1644:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "_blockFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "1659:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1615:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_ChessGame_$449_$",
                        "typeString": "function (address[] memory,address[] memory,uint256) returns (contract ChessGame)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "ChessGame",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 449,
                        "src": "1619:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChessGame_$449",
                      "typeString": "contract ChessGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1593:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 503,
                            "name": "chessGame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "1702:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChessGame_$449",
                              "typeString": "contract ChessGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChessGame_$449",
                              "typeString": "contract ChessGame"
                            }
                          ],
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1694:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1694:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1694:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 498,
                        "name": "games",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "1683:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1683:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 507,
                        "name": "latestGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "1724:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "1735:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1735:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1724:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 513,
                          "name": "chessGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "1757:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChessGame_$449",
                            "typeString": "contract ChessGame"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChessGame_$449",
                            "typeString": "contract ChessGame"
                          }
                        ],
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1749:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1749:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1724:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "chessGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1793:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      ],
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1785:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1785:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 488,
                  "id": 521,
                  "nodeType": "Return",
                  "src": "1778:25:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Creates a new game, initialising new contracts for the chess game, and a new board state\n @dev too expensive to do in live, needs to be optimised or looked at for a cheaper option. (Costs 200k+ gas!)\n @param _whitePlayers is an array of addresses representing the players for the white pieces \n @param _blackPlayers is an array of addresses representing the players for the black pieces\n @param _blockFactor represents the amount of blocks that can pass before timing a team out\n @return newContract - the address of the new ChessGame contract owned by the msg.sender",
            "functionSelector": "51583ac8",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 484,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 467,
                  "src": "1530:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1530:15:2"
              }
            ],
            "name": "newGame",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "name": "_whitePlayers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1447:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 475,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1447:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 476,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1447:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "name": "_blackPlayers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1479:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 478,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1479:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 479,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1479:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "name": "_blockFactor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1511:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1446:83:2"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1561:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:21:2"
            },
            "scope": 544,
            "src": "1430:381:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "2134:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 528,
                      "name": "games",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "2152:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2152:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 527,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "2145:19:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Returns the current size of the games variable\n @dev probably converted to a uint in a vinal build just to track new games, instead of tracking the existing array\n @return size of the games array",
            "functionSelector": "a28b7965",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGamesSize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:2"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "2123:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:11:2"
            },
            "scope": 544,
            "src": "2078:94:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "2370:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 537,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "2381:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2391:8:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2392:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2381:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:18:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Flips the active state of the contract, active/inactive\n @dev Used for circuit breaker function",
            "functionSelector": "29c68dc1",
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 535,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 534,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "2353:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2353:9:2"
              }
            ],
            "name": "toggleActive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:2:2"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:0:2"
            },
            "scope": 544,
            "src": "2329:78:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 545,
        "src": "177:2235:2"
      }
    ],
    "src": "0:2412:2"
  },
  "legacyAST": {
    "absolutePath": "/E/dev/Consensys Course/EtherChess/contracts/GameCreator.sol",
    "exportedSymbols": {
      "GameCreator": [
        544
      ]
    },
    "id": 545,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 451,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/E/dev/Consensys Course/EtherChess/contracts/ChessGame.sol",
        "file": "./ChessGame.sol",
        "id": 452,
        "nodeType": "ImportDirective",
        "scope": 545,
        "sourceUnit": 450,
        "src": "36:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 453,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 716,
              "src": "201:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$716",
                "typeString": "contract Ownable"
              }
            },
            "id": 454,
            "nodeType": "InheritanceSpecifier",
            "src": "201:7:2"
          }
        ],
        "contractDependencies": [
          449,
          613,
          716
        ],
        "contractKind": "contract",
        "documentation": "@title A contract that initialises new ChessGames, giving users their own chess game\n @author Jaan Smith",
        "fullyImplemented": true,
        "id": 544,
        "linearizedBaseContracts": [
          544,
          716,
          613
        ],
        "name": "GameCreator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "75f12b21",
            "id": 457,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "248:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 455,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "248:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "270:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "307:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "317:8:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "318:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732073746f70706564",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "327:21:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c47b25138acd721a4e3edee77dde73d84e3fb161494ef995338743254e8ff252",
                          "typeString": "literal_string \"Contract is stopped\""
                        },
                        "value": "Contract is stopped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c47b25138acd721a4e3edee77dde73d84e3fb161494ef995338743254e8ff252",
                          "typeString": "literal_string \"Contract is stopped\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        734,
                        735
                      ],
                      "referencedDeclaration": 735,
                      "src": "309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "309:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "309:41:2"
                },
                {
                  "id": 465,
                  "nodeType": "PlaceholderStatement",
                  "src": "352:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 467,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:2"
            },
            "src": "282:74:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "117a5b90",
            "id": 470,
            "name": "games",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "585:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 468,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "585:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 469,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "585:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b553910d",
            "id": 474,
            "name": "latestGame",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 544,
            "src": "723:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 473,
              "keyType": {
                "id": 471,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "723:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 472,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "742:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "1582:229:2",
              "statements": [
                {
                  "assignments": [
                    490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 490,
                      "name": "chessGame",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 522,
                      "src": "1593:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChessGame_$449",
                        "typeString": "contract ChessGame"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 489,
                        "name": "ChessGame",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 449,
                        "src": "1593:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 493,
                        "name": "_whitePlayers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "1629:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "_blackPlayers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "1644:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "_blockFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "1659:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1615:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_ChessGame_$449_$",
                        "typeString": "function (address[] memory,address[] memory,uint256) returns (contract ChessGame)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 491,
                        "name": "ChessGame",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 449,
                        "src": "1619:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChessGame_$449",
                      "typeString": "contract ChessGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1593:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 503,
                            "name": "chessGame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "1702:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChessGame_$449",
                              "typeString": "contract ChessGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChessGame_$449",
                              "typeString": "contract ChessGame"
                            }
                          ],
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1694:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1694:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1694:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 498,
                        "name": "games",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "1683:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1683:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 507,
                        "name": "latestGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "1724:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "1735:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1735:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1724:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 513,
                          "name": "chessGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "1757:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChessGame_$449",
                            "typeString": "contract ChessGame"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChessGame_$449",
                            "typeString": "contract ChessGame"
                          }
                        ],
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1749:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1749:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1724:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "chessGame",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1793:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ChessGame_$449",
                          "typeString": "contract ChessGame"
                        }
                      ],
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1785:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1785:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 488,
                  "id": 521,
                  "nodeType": "Return",
                  "src": "1778:25:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Creates a new game, initialising new contracts for the chess game, and a new board state\n @dev too expensive to do in live, needs to be optimised or looked at for a cheaper option. (Costs 200k+ gas!)\n @param _whitePlayers is an array of addresses representing the players for the white pieces \n @param _blackPlayers is an array of addresses representing the players for the black pieces\n @param _blockFactor represents the amount of blocks that can pass before timing a team out\n @return newContract - the address of the new ChessGame contract owned by the msg.sender",
            "functionSelector": "51583ac8",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 484,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 467,
                  "src": "1530:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1530:15:2"
              }
            ],
            "name": "newGame",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "name": "_whitePlayers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1447:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 475,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1447:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 476,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1447:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "name": "_blackPlayers",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1479:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 478,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1479:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 479,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1479:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "name": "_blockFactor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1511:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1446:83:2"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 523,
                  "src": "1561:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:21:2"
            },
            "scope": 544,
            "src": "1430:381:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "2134:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 528,
                      "name": "games",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "2152:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2152:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 527,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "2145:19:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Returns the current size of the games variable\n @dev probably converted to a uint in a vinal build just to track new games, instead of tracking the existing array\n @return size of the games array",
            "functionSelector": "a28b7965",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGamesSize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:2"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "2123:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:11:2"
            },
            "scope": 544,
            "src": "2078:94:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "2370:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 537,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "2381:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2391:8:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2392:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2381:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:18:2"
                }
              ]
            },
            "documentation": "@author Jaan Smith\n @notice Flips the active state of the contract, active/inactive\n @dev Used for circuit breaker function",
            "functionSelector": "29c68dc1",
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 535,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 534,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "2353:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2353:9:2"
              }
            ],
            "name": "toggleActive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:2:2"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:0:2"
            },
            "scope": 544,
            "src": "2329:78:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 545,
        "src": "177:2235:2"
      }
    ],
    "src": "0:2412:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.1+commit.e6f7d5a4.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA877f8C258654C83035EdbD88f1Ee154A6F30830",
      "transactionHash": "0x2c74ba9fd3c00ea324859048e16878a8b5ac2cd3103e0bad95bffc919cc94709"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-14T12:50:34.236Z",
  "devdoc": {
    "author": "Jaan Smith",
    "methods": {
      "getGamesSize()": {
        "author": "Jaan Smith",
        "details": "probably converted to a uint in a vinal build just to track new games, instead of tracking the existing array",
        "returns": {
          "size": "of the games array"
        }
      },
      "newGame(address[],address[],uint256)": {
        "author": "Jaan Smith",
        "details": "too expensive to do in live, needs to be optimised or looked at for a cheaper option. (Costs 200k+ gas!)",
        "params": {
          "_blackPlayers": "is an array of addresses representing the players for the black pieces",
          "_blockFactor": "represents the amount of blocks that can pass before timing a team out",
          "_whitePlayers": "is an array of addresses representing the players for the white pieces "
        },
        "returns": {
          "newContract": "- the address of the new ChessGame contract owned by the msg.sender"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "toggleActive()": {
        "author": "Jaan Smith",
        "details": "Used for circuit breaker function"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A contract that initialises new ChessGames, giving users their own chess game"
  },
  "userdoc": {
    "methods": {
      "getGamesSize()": {
        "notice": "Returns the current size of the games variable"
      },
      "newGame(address[],address[],uint256)": {
        "notice": "Creates a new game, initialising new contracts for the chess game, and a new board state"
      },
      "toggleActive()": {
        "notice": "Flips the active state of the contract, active/inactive"
      }
    }
  }
}